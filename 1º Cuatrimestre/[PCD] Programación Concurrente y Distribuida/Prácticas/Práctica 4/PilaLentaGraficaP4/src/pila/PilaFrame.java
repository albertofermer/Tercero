/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package pila;

import java.awt.Color;
import static java.lang.Thread.sleep;

/**
 *
 * @author Alberto Fernández
 */
public class PilaFrame extends java.awt.Frame {

    /**
     * Creates new form PilaFrame
     */
    private static final int ANCHO = 500;
    private static final int ALTO = 800;
    private static final int CAPACIDAD = 10;

    private static final int PRODUCTORES = 4;
    private static final int CONSUMIDORES = 1;

    public PilaFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(600, 600));
        setTitle("Pila Gráfica");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {

        PilaFrame pilaGrafica = new PilaFrame();
        pilaGrafica.setSize(ANCHO, ALTO);
        pilaGrafica.setBackground(Color.decode("#0B2611"));  //#B0F3BE

        CanvasPila lienzo = new CanvasPila(CAPACIDAD);
        lienzo.setSize(ANCHO, ALTO);
        lienzo.setBackground(Color.decode("#5CBD70"));
        pilaGrafica.add(lienzo);

        pilaGrafica.setVisible(true);

        PilaLenta pila = new PilaLenta(CAPACIDAD, lienzo);

        productor productores[] = new productor[PRODUCTORES]; //extends Thread
        Thread consumidoresH[] = new Thread[CONSUMIDORES];

        for (int i = 0; i < PRODUCTORES; i++) {
            productores[i] = new productor(pila);
        }

        for (int i = 0; i < CONSUMIDORES; i++) {
            consumidoresH[i] = new Thread(new consumidor(pila));
        }

        for (int i = 0; i < PRODUCTORES; i++) {
            productores[i].start();
        }

        for (int i = 0; i < CONSUMIDORES; i++) {
            consumidoresH[i].start();
        }

        for (int i = 0; i < CONSUMIDORES; i++) {
            consumidoresH[i].join();
        }
        System.out.println("Finalizan los consumidores");
        Thread.sleep(3000);
        //Avisar a los productores de que han acabado.
        
        for (int i = 0; i < PRODUCTORES; i++) {
            productores[i].interrupt();
        }        
        

        for (int i = 0; i < PRODUCTORES; i++) {
            productores[i].join();
        }

        System.out.println("Finalizan los productores");
        
        sleep(3000);

        System.exit(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
